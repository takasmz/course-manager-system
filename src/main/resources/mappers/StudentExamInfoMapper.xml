<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coursemanager.mapper.StudentExamInfoMapper">
  <resultMap id="BaseResultMap" type="com.coursemanager.model.StudentExamInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="exam_id" jdbcType="VARCHAR" property="examId" />
    <result column="submit_type" jdbcType="INTEGER" property="submitType" />
    <result column="submit_content" jdbcType="VARCHAR" property="submitContent" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="error" jdbcType="VARCHAR" property="error" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="submit_time" jdbcType="TIMESTAMP" property="submitTime" />
    <result column="total_testcases" jdbcType="INTEGER" property="totalTestcases" />
    <result column="total_correct" jdbcType="INTEGER" property="totalCorrect" />
  </resultMap>

  <resultMap id="BaseResultMapDto" type="com.coursemanager.dto.StudentExamInfoDto" extends="BaseResultMap">
    <result column="exam_title" jdbcType="VARCHAR" property="examTitle" />
    <result column="submit_time_str" jdbcType="VARCHAR" property="submitTimeStr" />
    <result column="total" jdbcType="INTEGER" property="total" />
    <result column="finished" jdbcType="INTEGER" property="finished" />
      <result column="submitStatus" jdbcType="INTEGER" property="submitStatus" />
      <result column="courseExamId" jdbcType="INTEGER" property="courseExamId" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
  </resultMap>

  <select id="getRecordList" resultMap="BaseResultMapDto">
    SELECT
      ei.exam_title,
      sei.id,
      sei.exam_id,
      sei.error,
      sei.result,
      sei.STATUS,
      sei.student_id,
      sei.submit_content,
      DATE_FORMAT( sei.submit_time, '%Y-%m-%d %H:%i:%S' ) submit_time_str,
      sei.submit_type,
      sei.total_correct,
      sei.total_testcases
    FROM
      course_info ci
    LEFT JOIN course_exam_info cei ON cei.course_id = ci.id
    LEFT JOIN exam_info ei ON ei.course_exam_id = cei.id
    LEFT JOIN student_exam_info sei ON ei.exam_id = sei.exam_id
    WHERE
      sei.student_id = #{studentId}
      <if test="courseId != null and courseId != ''">
        AND ci.id = #{courseId}
      </if>
    order by sei.submit_time DESC
  </select>

  <select id="getStudentRecordList" resultMap="BaseResultMapDto">
    SELECT
           CONCAT(si.student_name,si.student_number) student_name,
           CONCAT( '第', cei.exam_number, '次作业' ) exam_title,
           cei.id courseExamId,
           sc.student_id,
           ( SELECT COUNT( course_exam_id ) FROM exam_info WHERE course_exam_id = cei.id ) total,
           (
           SELECT
                  COUNT( DISTINCT exam_id )
           FROM
                student_exam_info
           WHERE
                   student_id = sc.student_id
             AND exam_id in( SELECT exam_id FROM exam_info WHERE course_exam_id = cei.id )
           ) finished,
           (SELECT
              status
            FROM
              student_exam_info
            WHERE
              student_id = sc.student_id
              AND exam_id in( SELECT exam_id FROM exam_info WHERE course_exam_id = cei.id)
            ORDER BY submit_time
            limit 1 ) submitStatus
    FROM
         course_info ci
           LEFT JOIN course_exam_info cei ON cei.course_id = ci.id
           LEFT JOIN student_course sc ON sc.course_id = ci.id
           LEFT JOIN student_info si ON si.student_id = sc.student_id
    WHERE
            ci.id = #{courseId}
    AND sc.student_id IN
    <foreach collection="list" index="index" separator="," open="(" close=")" item="studentCourse">
        #{studentCourse.studentId}
    </foreach>
    ORDER BY student_id
  </select>

    <select id="queryHomeworkRecordDetail" resultMap="BaseResultMapDto">
        SELECT
            ei.exam_title,
            ei.exam_id,
            t.`status` stauts
        FROM
            exam_info ei
        LEFT JOIN ( SELECT sei.exam_id, sei.`status` FROM student_exam_info sei WHERE sei.student_id = #{studentId} GROUP BY sei.exam_id ) t ON t.exam_id IS NULL
        WHERE
            ei.course_exam_id = #{courseExamId}
    </select>
</mapper>